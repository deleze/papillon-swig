/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class PImage extends PSerialisationInterface {
  private long swigCPtr;

  protected PImage(long cPtr, boolean cMemoryOwn) {
    super(PapillonCoreJavaJNI.PImage_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PImage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        PapillonCoreJavaJNI.delete_PImage(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static int getC_MAX_SIZE() {
    return PapillonCoreJavaJNI.PImage_C_MAX_SIZE_get();
  }

  public PImage(int width, int height, PImage.EPixelFormat pixelFormat) {
    this(PapillonCoreJavaJNI.new_PImage__SWIG_0(width, height, pixelFormat.swigValue()), true);
  }

  public PImage(int width, int height) {
    this(PapillonCoreJavaJNI.new_PImage__SWIG_1(width, height), true);
  }

  public PImage(int width) {
    this(PapillonCoreJavaJNI.new_PImage__SWIG_2(width), true);
  }

  public PImage() {
    this(PapillonCoreJavaJNI.new_PImage__SWIG_3(), true);
  }

  public PImage(PImage other) {
    this(PapillonCoreJavaJNI.new_PImage__SWIG_4(PImage.getCPtr(other), other), true);
  }

  public PImage Clone() {
    return new PImage(PapillonCoreJavaJNI.PImage_Clone(swigCPtr, this), true);
  }

  public void Allocate(int width, int height, PImage.EPixelFormat pixelFormat) {
    PapillonCoreJavaJNI.PImage_Allocate__SWIG_0(swigCPtr, this, width, height, pixelFormat.swigValue());
  }

  public void Allocate(int width, int height) {
    PapillonCoreJavaJNI.PImage_Allocate__SWIG_1(swigCPtr, this, width, height);
  }

  public int GetWidth() {
    return PapillonCoreJavaJNI.PImage_GetWidth(swigCPtr, this);
  }

  public int GetHeight() {
    return PapillonCoreJavaJNI.PImage_GetHeight(swigCPtr, this);
  }

  public PRectanglei GetRectangle() {
    return new PRectanglei(PapillonCoreJavaJNI.PImage_GetRectangle(swigCPtr, this), true);
  }

  public PSizei GetSize() {
    return new PSizei(PapillonCoreJavaJNI.PImage_GetSize(swigCPtr, this), true);
  }

  public PSizei ScaleSize(float scaleFactor) {
    return new PSizei(PapillonCoreJavaJNI.PImage_ScaleSize(swigCPtr, this, scaleFactor), true);
  }

  public float GetAspectRatio() {
    return PapillonCoreJavaJNI.PImage_GetAspectRatio(swigCPtr, this);
  }

  public int GetNumberOfChannels() {
    return PapillonCoreJavaJNI.PImage_GetNumberOfChannels(swigCPtr, this);
  }

  public int GetSizeOfPixelBuffer() {
    return PapillonCoreJavaJNI.PImage_GetSizeOfPixelBuffer(swigCPtr, this);
  }

  public int GetSizeOfPixel() {
    return PapillonCoreJavaJNI.PImage_GetSizeOfPixel(swigCPtr, this);
  }

  public PImage.EPixelFormat GetPixelFormat() {
    return PImage.EPixelFormat.swigToEnum(PapillonCoreJavaJNI.PImage_GetPixelFormat(swigCPtr, this));
  }

  public PString GetPixelFormatToString() {
    return new PString(PapillonCoreJavaJNI.PImage_GetPixelFormatToString__SWIG_0(swigCPtr, this), true);
  }

  public static PString GetPixelFormatToString(PImage.EPixelFormat pixelFormat) {
    return new PString(PapillonCoreJavaJNI.PImage_GetPixelFormatToString__SWIG_1(pixelFormat.swigValue()), true);
  }

  public SWIGTYPE_p_unsigned_char GetDataPtr(int row) {
    long cPtr = PapillonCoreJavaJNI.PImage_GetDataPtr__SWIG_0(swigCPtr, this, row);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_char GetDataPtr() {
    long cPtr = PapillonCoreJavaJNI.PImage_GetDataPtr__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public SWIGTYPE_p_unsigned_char GetPixel(int x, int y) {
    long cPtr = PapillonCoreJavaJNI.PImage_GetPixel(swigCPtr, this, x, y);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  }

  public boolean IsEmpty() {
    return PapillonCoreJavaJNI.PImage_IsEmpty(swigCPtr, this);
  }

  public boolean IsGrayscale() {
    return PapillonCoreJavaJNI.PImage_IsGrayscale(swigCPtr, this);
  }

  public boolean IsSame(PImage other) {
    return PapillonCoreJavaJNI.PImage_IsSame(swigCPtr, this, PImage.getCPtr(other), other);
  }

  public PResult Set(SWIGTYPE_p_void inputRawBuffer, int width, int height, PImage.EPixelFormat pixelFormat) {
    return new PResult(PapillonCoreJavaJNI.PImage_Set__SWIG_0(swigCPtr, this, SWIGTYPE_p_void.getCPtr(inputRawBuffer), width, height, pixelFormat.swigValue()), true);
  }

  public PResult Set(SWIGTYPE_p_std__vectorT_unsigned_char_t inputRawBuffer, int width, int height, PImage.EPixelFormat pixelFormat) {
    return new PResult(PapillonCoreJavaJNI.PImage_Set__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__vectorT_unsigned_char_t.getCPtr(inputRawBuffer), width, height, pixelFormat.swigValue()), true);
  }

  public PResult ExtractSubImage(PImage dest, int x, int y, int width, int height) {
    return new PResult(PapillonCoreJavaJNI.PImage_ExtractSubImage(swigCPtr, this, PImage.getCPtr(dest), dest, x, y, width, height), true);
  }

  public PResult Convert(PImage dest, PImage.EPixelFormat destImageType) {
    return new PResult(PapillonCoreJavaJNI.PImage_Convert(swigCPtr, this, PImage.getCPtr(dest), dest, destImageType.swigValue()), true);
  }

  public PResult Resize(PImage dest, int newWidth, int newHeight, PImage.EInterpolation interpolation) {
    return new PResult(PapillonCoreJavaJNI.PImage_Resize__SWIG_0(swigCPtr, this, PImage.getCPtr(dest), dest, newWidth, newHeight, interpolation.swigValue()), true);
  }

  public PResult Resize(PImage dest, int newWidth, int newHeight) {
    return new PResult(PapillonCoreJavaJNI.PImage_Resize__SWIG_1(swigCPtr, this, PImage.getCPtr(dest), dest, newWidth, newHeight), true);
  }

  public PResult Resize(PImage dest, PSizei newSize, PImage.EInterpolation interpolation) {
    return new PResult(PapillonCoreJavaJNI.PImage_Resize__SWIG_2(swigCPtr, this, PImage.getCPtr(dest), dest, PSizei.getCPtr(newSize), newSize, interpolation.swigValue()), true);
  }

  public PResult Resize(PImage dest, PSizei newSize) {
    return new PResult(PapillonCoreJavaJNI.PImage_Resize__SWIG_3(swigCPtr, this, PImage.getCPtr(dest), dest, PSizei.getCPtr(newSize), newSize), true);
  }

  public PResult EqualizeHistogram(PImage dest) {
    return new PResult(PapillonCoreJavaJNI.PImage_EqualizeHistogram(swigCPtr, this, PImage.getCPtr(dest), dest), true);
  }

  public void Clear() {
    PapillonCoreJavaJNI.PImage_Clear(swigCPtr, this);
  }

  public PResult Fill(PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_Fill(swigCPtr, this, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawString(PString text, PPoint2Di origin, int font, PColour3i color, double fontScale) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawString__SWIG_0(swigCPtr, this, PString.getCPtr(text), text, PPoint2Di.getCPtr(origin), origin, font, PColour3i.getCPtr(color), color, fontScale), true);
  }

  public PResult DrawString(PString text, PPoint2Di origin, int font, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawString__SWIG_1(swigCPtr, this, PString.getCPtr(text), text, PPoint2Di.getCPtr(origin), origin, font, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawString(PString text, PPoint2Di origin, PString fontName, int fontSize, PColour3i fontColor) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawString__SWIG_2(swigCPtr, this, PString.getCPtr(text), text, PPoint2Di.getCPtr(origin), origin, PString.getCPtr(fontName), fontName, fontSize, PColour3i.getCPtr(fontColor), fontColor), true);
  }

  public PResult DrawLine(int x1, int y1, int x2, int y2, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawLine__SWIG_0(swigCPtr, this, x1, y1, x2, y2, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawLine(int x1, int y1, int x2, int y2, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawLine__SWIG_1(swigCPtr, this, x1, y1, x2, y2, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawRectangle(PRectanglei r, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawRectangle__SWIG_0(swigCPtr, this, PRectanglei.getCPtr(r), r, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawRectangle(PRectanglei r, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawRectangle__SWIG_1(swigCPtr, this, PRectanglei.getCPtr(r), r, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawRectangle(PRectanglef r, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawRectangle__SWIG_2(swigCPtr, this, PRectanglef.getCPtr(r), r, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawRectangle(PRectanglef r, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawRectangle__SWIG_3(swigCPtr, this, PRectanglef.getCPtr(r), r, PColour3i.getCPtr(color), color), true);
  }

  public PResult FillRectangle(PRectanglei r, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_FillRectangle(swigCPtr, this, PRectanglei.getCPtr(r), r, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawPolygon(PPolygoni p, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawPolygon__SWIG_0(swigCPtr, this, PPolygoni.getCPtr(p), p, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawPolygon(PPolygoni p, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawPolygon__SWIG_1(swigCPtr, this, PPolygoni.getCPtr(p), p, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawPolygon(PPolygonf p, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawPolygon__SWIG_2(swigCPtr, this, PPolygonf.getCPtr(p), p, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawPolygon(PPolygonf p, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawPolygon__SWIG_3(swigCPtr, this, PPolygonf.getCPtr(p), p, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawCircle(PPoint2Df p, int radius, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawCircle__SWIG_0(swigCPtr, this, PPoint2Df.getCPtr(p), p, radius, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawCircle(PPoint2Df p, int radius, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawCircle__SWIG_1(swigCPtr, this, PPoint2Df.getCPtr(p), p, radius, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawCircle(int x, int y, int radius, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawCircle__SWIG_2(swigCPtr, this, x, y, radius, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawCircle(int x, int y, int radius, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawCircle__SWIG_3(swigCPtr, this, x, y, radius, PColour3i.getCPtr(color), color), true);
  }

  public PResult DrawEllipse(int x, int y, int width, int height, PColour3i color, int thickness) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawEllipse__SWIG_0(swigCPtr, this, x, y, width, height, PColour3i.getCPtr(color), color, thickness), true);
  }

  public PResult DrawEllipse(int x, int y, int width, int height, PColour3i color) {
    return new PResult(PapillonCoreJavaJNI.PImage_DrawEllipse__SWIG_1(swigCPtr, this, x, y, width, height, PColour3i.getCPtr(color), color), true);
  }

  public PResult Load(PByteArray inputBuffer) {
    return new PResult(PapillonCoreJavaJNI.PImage_Load__SWIG_0(swigCPtr, this, PByteArray.getCPtr(inputBuffer), inputBuffer), true);
  }

  public PResult Load(PString filename) {
    return new PResult(PapillonCoreJavaJNI.PImage_Load__SWIG_1(swigCPtr, this, PString.getCPtr(filename), filename), true);
  }

  public PResult Save(PByteArray outputBuffer, PImage.EFileFormat format, int quality) {
    return new PResult(PapillonCoreJavaJNI.PImage_Save__SWIG_0(swigCPtr, this, PByteArray.getCPtr(outputBuffer), outputBuffer, format.swigValue(), quality), true);
  }

  public PResult Save(PByteArray outputBuffer, PImage.EFileFormat format) {
    return new PResult(PapillonCoreJavaJNI.PImage_Save__SWIG_1(swigCPtr, this, PByteArray.getCPtr(outputBuffer), outputBuffer, format.swigValue()), true);
  }

  public PResult Save(PString filename, int quality) {
    return new PResult(PapillonCoreJavaJNI.PImage_Save__SWIG_2(swigCPtr, this, PString.getCPtr(filename), filename, quality), true);
  }

  public PResult Save(PString filename) {
    return new PResult(PapillonCoreJavaJNI.PImage_Save__SWIG_3(swigCPtr, this, PString.getCPtr(filename), filename), true);
  }

  public PResult Write(POutputStream os, ESerialisationFormat format) {
    return new PResult(PapillonCoreJavaJNI.PImage_Write__SWIG_0(swigCPtr, this, POutputStream.getCPtr(os), os, format.swigValue()), true);
  }

  public PResult Write(POutputStream os) {
    return new PResult(PapillonCoreJavaJNI.PImage_Write__SWIG_1(swigCPtr, this, POutputStream.getCPtr(os), os), true);
  }

  public PResult Read(PInputStream is, ESerialisationFormat format) {
    return new PResult(PapillonCoreJavaJNI.PImage_Read__SWIG_0(swigCPtr, this, PInputStream.getCPtr(is), is, format.swigValue()), true);
  }

  public PResult Read(PInputStream is) {
    return new PResult(PapillonCoreJavaJNI.PImage_Read__SWIG_1(swigCPtr, this, PInputStream.getCPtr(is), is), true);
  }

  public PResult Display(PString title, int waitTimeMs) {
    return new PResult(PapillonCoreJavaJNI.PImage_Display__SWIG_0(swigCPtr, this, PString.getCPtr(title), title, waitTimeMs), true);
  }

  public PResult Display(PString title) {
    return new PResult(PapillonCoreJavaJNI.PImage_Display__SWIG_1(swigCPtr, this, PString.getCPtr(title), title), true);
  }

  public PResult DisplayOff(PString title) {
    return new PResult(PapillonCoreJavaJNI.PImage_DisplayOff(swigCPtr, this, PString.getCPtr(title), title), true);
  }

  public PString ToString() {
    return new PString(PapillonCoreJavaJNI.PImage_ToString(swigCPtr, this), true);
  }

  public PResult SetFromCvMat(SWIGTYPE_p_void arg0) {
    return new PResult(PapillonCoreJavaJNI.PImage_SetFromCvMat(swigCPtr, this, SWIGTYPE_p_void.getCPtr(arg0)), true);
  }

  public static PClassId getC_CLASSID() {
    long cPtr = PapillonCoreJavaJNI.PImage_C_CLASSID_get();
    return (cPtr == 0) ? null : new PClassId(cPtr, false);
  }

  public final static class EPixelFormat {
    public final static PImage.EPixelFormat E_UNSPECIFIED = new PImage.EPixelFormat("E_UNSPECIFIED");
    public final static PImage.EPixelFormat E_BGR8U = new PImage.EPixelFormat("E_BGR8U");
    public final static PImage.EPixelFormat E_RGB8U = new PImage.EPixelFormat("E_RGB8U");
    public final static PImage.EPixelFormat E_BGRA8U = new PImage.EPixelFormat("E_BGRA8U");
    public final static PImage.EPixelFormat E_RGBA8U = new PImage.EPixelFormat("E_RGBA8U");
    public final static PImage.EPixelFormat E_GREY8U = new PImage.EPixelFormat("E_GREY8U");
    public final static PImage.EPixelFormat E_YCrCb8U = new PImage.EPixelFormat("E_YCrCb8U");
    public final static PImage.EPixelFormat E_HSV8U = new PImage.EPixelFormat("E_HSV8U");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static EPixelFormat swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + EPixelFormat.class + " with value " + swigValue);
    }

    private EPixelFormat(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private EPixelFormat(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private EPixelFormat(String swigName, EPixelFormat swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static EPixelFormat[] swigValues = { E_UNSPECIFIED, E_BGR8U, E_RGB8U, E_BGRA8U, E_RGBA8U, E_GREY8U, E_YCrCb8U, E_HSV8U };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class EInterpolation {
    public final static PImage.EInterpolation E_INTERPOLATION_NEAREST = new PImage.EInterpolation("E_INTERPOLATION_NEAREST");
    public final static PImage.EInterpolation E_INTERPOLATION_LINEAR = new PImage.EInterpolation("E_INTERPOLATION_LINEAR");
    public final static PImage.EInterpolation E_INTERPOLATION_AREA = new PImage.EInterpolation("E_INTERPOLATION_AREA");
    public final static PImage.EInterpolation E_INTERPOLATION_CUBIC = new PImage.EInterpolation("E_INTERPOLATION_CUBIC");
    public final static PImage.EInterpolation E_INTERPOLATION_LANCZOS4 = new PImage.EInterpolation("E_INTERPOLATION_LANCZOS4");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static EInterpolation swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + EInterpolation.class + " with value " + swigValue);
    }

    private EInterpolation(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private EInterpolation(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private EInterpolation(String swigName, EInterpolation swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static EInterpolation[] swigValues = { E_INTERPOLATION_NEAREST, E_INTERPOLATION_LINEAR, E_INTERPOLATION_AREA, E_INTERPOLATION_CUBIC, E_INTERPOLATION_LANCZOS4 };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class EFont {
    public final static PImage.EFont E_FONT_HERSHEY_SIMPLEX = new PImage.EFont("E_FONT_HERSHEY_SIMPLEX", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_SIMPLEX_get());
    public final static PImage.EFont E_FONT_HERSHEY_PLAIN = new PImage.EFont("E_FONT_HERSHEY_PLAIN", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_PLAIN_get());
    public final static PImage.EFont E_FONT_HERSHEY_DUPLEX = new PImage.EFont("E_FONT_HERSHEY_DUPLEX", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_DUPLEX_get());
    public final static PImage.EFont E_FONT_HERSHEY_COMPLEX = new PImage.EFont("E_FONT_HERSHEY_COMPLEX", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_COMPLEX_get());
    public final static PImage.EFont E_FONT_HERSHEY_TRIPLEX = new PImage.EFont("E_FONT_HERSHEY_TRIPLEX", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_TRIPLEX_get());
    public final static PImage.EFont E_FONT_HERSHEY_COMPLEX_SMALL = new PImage.EFont("E_FONT_HERSHEY_COMPLEX_SMALL", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_COMPLEX_SMALL_get());
    public final static PImage.EFont E_FONT_HERSHEY_SCRIPT_SIMPLEX = new PImage.EFont("E_FONT_HERSHEY_SCRIPT_SIMPLEX", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_SCRIPT_SIMPLEX_get());
    public final static PImage.EFont E_FONT_HERSHEY_SCRIPT_COMPLEX = new PImage.EFont("E_FONT_HERSHEY_SCRIPT_COMPLEX", PapillonCoreJavaJNI.PImage_E_FONT_HERSHEY_SCRIPT_COMPLEX_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static EFont swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + EFont.class + " with value " + swigValue);
    }

    private EFont(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private EFont(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private EFont(String swigName, EFont swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static EFont[] swigValues = { E_FONT_HERSHEY_SIMPLEX, E_FONT_HERSHEY_PLAIN, E_FONT_HERSHEY_DUPLEX, E_FONT_HERSHEY_COMPLEX, E_FONT_HERSHEY_TRIPLEX, E_FONT_HERSHEY_COMPLEX_SMALL, E_FONT_HERSHEY_SCRIPT_SIMPLEX, E_FONT_HERSHEY_SCRIPT_COMPLEX };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class EFileFormat {
    public final static PImage.EFileFormat E_BMP = new PImage.EFileFormat("E_BMP");
    public final static PImage.EFileFormat E_PNG = new PImage.EFileFormat("E_PNG");
    public final static PImage.EFileFormat E_JPG = new PImage.EFileFormat("E_JPG");
    public final static PImage.EFileFormat E_TIF = new PImage.EFileFormat("E_TIF");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static EFileFormat swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + EFileFormat.class + " with value " + swigValue);
    }

    private EFileFormat(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private EFileFormat(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private EFileFormat(String swigName, EFileFormat swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static EFileFormat[] swigValues = { E_BMP, E_PNG, E_JPG, E_TIF };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
