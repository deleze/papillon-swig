/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class PapillonCoreJava {
  public static String GetStreamStatusMessage(int streamStatus) {
    return PapillonCoreJavaJNI.GetStreamStatusMessage(streamStatus);
  }

  public static int getWAIT_FOR_RETURN() {
    return PapillonCoreJavaJNI.WAIT_FOR_RETURN_get();
  }

  public static PString GetEnv(PString envVar) {
    return new PString(PapillonCoreJavaJNI.GetEnv(PString.getCPtr(envVar), envVar), true);
  }

  public static PString AbsoluteFilePath(PString filename) {
    return new PString(PapillonCoreJavaJNI.AbsoluteFilePath(PString.getCPtr(filename), filename), true);
  }

  public static PString AbsolutePath(PString path) {
    return new PString(PapillonCoreJavaJNI.AbsolutePath(PString.getCPtr(path), path), true);
  }

  public static PString JoinPaths(PString path1, PString path2) {
    return new PString(PapillonCoreJavaJNI.JoinPaths__SWIG_0(PString.getCPtr(path1), path1, PString.getCPtr(path2), path2), true);
  }

  public static PString JoinPaths(PString path1, PString path2, PString path3) {
    return new PString(PapillonCoreJavaJNI.JoinPaths__SWIG_1(PString.getCPtr(path1), path1, PString.getCPtr(path2), path2, PString.getCPtr(path3), path3), true);
  }

  public static PString JoinPaths(PString path1, PString path2, PString path3, PString path4) {
    return new PString(PapillonCoreJavaJNI.JoinPaths__SWIG_2(PString.getCPtr(path1), path1, PString.getCPtr(path2), path2, PString.getCPtr(path3), path3, PString.getCPtr(path4), path4), true);
  }

  public static PString JoinPaths(PString path1, PString path2, PString path3, PString path4, PString path5) {
    return new PString(PapillonCoreJavaJNI.JoinPaths__SWIG_3(PString.getCPtr(path1), path1, PString.getCPtr(path2), path2, PString.getCPtr(path3), path3, PString.getCPtr(path4), path4, PString.getCPtr(path5), path5), true);
  }

  public static PString AddPathSeparatorIfMissing(PString s) {
    return new PString(PapillonCoreJavaJNI.AddPathSeparatorIfMissing(PString.getCPtr(s), s), true);
  }

  public static boolean IsEscPressed() {
    return PapillonCoreJavaJNI.IsEscPressed();
  }

  public static boolean IsKeyPressed(int key) {
    return PapillonCoreJavaJNI.IsKeyPressed__SWIG_0(key);
  }

  public static boolean IsKeyPressed() {
    return PapillonCoreJavaJNI.IsKeyPressed__SWIG_1();
  }

  public static boolean IsPathExist(PString path) {
    return PapillonCoreJavaJNI.IsPathExist(PString.getCPtr(path), path);
  }

  public static PResult GetCurrentProcessMemoryUsageMB(SWIGTYPE_p_float currentMemoryUsageMB, SWIGTYPE_p_float peakMemoryUsageMB, SWIGTYPE_p_unsigned_int pageFaultCount) {
    return new PResult(PapillonCoreJavaJNI.GetCurrentProcessMemoryUsageMB(SWIGTYPE_p_float.getCPtr(currentMemoryUsageMB), SWIGTYPE_p_float.getCPtr(peakMemoryUsageMB), SWIGTYPE_p_unsigned_int.getCPtr(pageFaultCount)), true);
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList, PColour3i colour, boolean drawId, boolean boundingBoxOnly) {
    return new PResult(PapillonCoreJavaJNI.DrawDetectionList__SWIG_0(PImage.getCPtr(image), image, PDetectionList.getCPtr(detectionList), detectionList, PColour3i.getCPtr(colour), colour, drawId, boundingBoxOnly), true);
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList, PColour3i colour, boolean drawId) {
    return new PResult(PapillonCoreJavaJNI.DrawDetectionList__SWIG_1(PImage.getCPtr(image), image, PDetectionList.getCPtr(detectionList), detectionList, PColour3i.getCPtr(colour), colour, drawId), true);
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList, PColour3i colour) {
    return new PResult(PapillonCoreJavaJNI.DrawDetectionList__SWIG_2(PImage.getCPtr(image), image, PDetectionList.getCPtr(detectionList), detectionList, PColour3i.getCPtr(colour), colour), true);
  }

  public static PResult DrawDetectionList(PImage image, PDetectionList detectionList) {
    return new PResult(PapillonCoreJavaJNI.DrawDetectionList__SWIG_3(PImage.getCPtr(image), image, PDetectionList.getCPtr(detectionList), detectionList), true);
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PColour3i colour, boolean drawId, boolean boundingBoxOnly) {
    return new PResult(PapillonCoreJavaJNI.DrawDetection__SWIG_0(PImage.getCPtr(image), image, PDetection.getCPtr(detection), detection, PColour3i.getCPtr(colour), colour, drawId, boundingBoxOnly), true);
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PColour3i colour, boolean drawId) {
    return new PResult(PapillonCoreJavaJNI.DrawDetection__SWIG_1(PImage.getCPtr(image), image, PDetection.getCPtr(detection), detection, PColour3i.getCPtr(colour), colour, drawId), true);
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PColour3i colour) {
    return new PResult(PapillonCoreJavaJNI.DrawDetection__SWIG_2(PImage.getCPtr(image), image, PDetection.getCPtr(detection), detection, PColour3i.getCPtr(colour), colour), true);
  }

  public static PResult DrawDetection(PImage image, PDetection detection) {
    return new PResult(PapillonCoreJavaJNI.DrawDetection__SWIG_3(PImage.getCPtr(image), image, PDetection.getCPtr(detection), detection), true);
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PString message, PColour3i colour, boolean boundingBoxOnly) {
    return new PResult(PapillonCoreJavaJNI.DrawDetection__SWIG_4(PImage.getCPtr(image), image, PDetection.getCPtr(detection), detection, PString.getCPtr(message), message, PColour3i.getCPtr(colour), colour, boundingBoxOnly), true);
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PString message, PColour3i colour) {
    return new PResult(PapillonCoreJavaJNI.DrawDetection__SWIG_5(PImage.getCPtr(image), image, PDetection.getCPtr(detection), detection, PString.getCPtr(message), message, PColour3i.getCPtr(colour), colour), true);
  }

  public static PResult DrawDetection(PImage image, PDetection detection, PString message) {
    return new PResult(PapillonCoreJavaJNI.DrawDetection__SWIG_6(PImage.getCPtr(image), image, PDetection.getCPtr(detection), detection, PString.getCPtr(message), message), true);
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, PString windowTitle, float scaleFactor, PColour3i colour, boolean drawId, boolean boundingBoxOnly) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetectionList__SWIG_0(PFrame.getCPtr(frame), frame, PDetectionList.getCPtr(detectionList), detectionList, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour, drawId, boundingBoxOnly), true);
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, PString windowTitle, float scaleFactor, PColour3i colour, boolean drawId) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetectionList__SWIG_1(PFrame.getCPtr(frame), frame, PDetectionList.getCPtr(detectionList), detectionList, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour, drawId), true);
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, PString windowTitle, float scaleFactor, PColour3i colour) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetectionList__SWIG_2(PFrame.getCPtr(frame), frame, PDetectionList.getCPtr(detectionList), detectionList, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour), true);
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, PString windowTitle, float scaleFactor) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetectionList__SWIG_3(PFrame.getCPtr(frame), frame, PDetectionList.getCPtr(detectionList), detectionList, PString.getCPtr(windowTitle), windowTitle, scaleFactor), true);
  }

  public static PResult DisplayDetectionList(PFrame frame, PDetectionList detectionList, PString windowTitle) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetectionList__SWIG_4(PFrame.getCPtr(frame), frame, PDetectionList.getCPtr(detectionList), detectionList, PString.getCPtr(windowTitle), windowTitle), true);
  }

  public static PResult DisplayDetection(PDetection detection, PString windowTitle, float scaleFactor, PColour3i colour, boolean drawId, boolean boundingBoxOnly) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetection__SWIG_0(PDetection.getCPtr(detection), detection, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour, drawId, boundingBoxOnly), true);
  }

  public static PResult DisplayDetection(PDetection detection, PString windowTitle, float scaleFactor, PColour3i colour, boolean drawId) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetection__SWIG_1(PDetection.getCPtr(detection), detection, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour, drawId), true);
  }

  public static PResult DisplayDetection(PDetection detection, PString windowTitle, float scaleFactor, PColour3i colour) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetection__SWIG_2(PDetection.getCPtr(detection), detection, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour), true);
  }

  public static PResult DisplayDetection(PDetection detection, PString windowTitle, float scaleFactor) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetection__SWIG_3(PDetection.getCPtr(detection), detection, PString.getCPtr(windowTitle), windowTitle, scaleFactor), true);
  }

  public static PResult DisplayDetection(PDetection detection, PString windowTitle) {
    return new PResult(PapillonCoreJavaJNI.DisplayDetection__SWIG_4(PDetection.getCPtr(detection), detection, PString.getCPtr(windowTitle), windowTitle), true);
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, PString windowTitle, float scaleFactor, PColour3i colour, boolean boundingBoxOnly) {
    return new PResult(PapillonCoreJavaJNI.DisplayFeatureMap__SWIG_0(PFrame.getCPtr(frame), frame, PFeatureMap.getCPtr(featureMap), featureMap, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour, boundingBoxOnly), true);
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, PString windowTitle, float scaleFactor, PColour3i colour) {
    return new PResult(PapillonCoreJavaJNI.DisplayFeatureMap__SWIG_1(PFrame.getCPtr(frame), frame, PFeatureMap.getCPtr(featureMap), featureMap, PString.getCPtr(windowTitle), windowTitle, scaleFactor, PColour3i.getCPtr(colour), colour), true);
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, PString windowTitle, float scaleFactor) {
    return new PResult(PapillonCoreJavaJNI.DisplayFeatureMap__SWIG_2(PFrame.getCPtr(frame), frame, PFeatureMap.getCPtr(featureMap), featureMap, PString.getCPtr(windowTitle), windowTitle, scaleFactor), true);
  }

  public static PResult DisplayFeatureMap(PFrame frame, PFeatureMap featureMap, PString windowTitle) {
    return new PResult(PapillonCoreJavaJNI.DisplayFeatureMap__SWIG_3(PFrame.getCPtr(frame), frame, PFeatureMap.getCPtr(featureMap), featureMap, PString.getCPtr(windowTitle), windowTitle), true);
  }

  public static PResult DrawFeatureMap(PImage image, PFeatureMap featureMap, PColour3i colour, boolean boundingBoxOnly) {
    return new PResult(PapillonCoreJavaJNI.DrawFeatureMap__SWIG_0(PImage.getCPtr(image), image, PFeatureMap.getCPtr(featureMap), featureMap, PColour3i.getCPtr(colour), colour, boundingBoxOnly), true);
  }

  public static PResult DrawFeatureMap(PImage image, PFeatureMap featureMap, PColour3i colour) {
    return new PResult(PapillonCoreJavaJNI.DrawFeatureMap__SWIG_1(PImage.getCPtr(image), image, PFeatureMap.getCPtr(featureMap), featureMap, PColour3i.getCPtr(colour), colour), true);
  }

  public static PResult DrawFeatureMap(PImage image, PFeatureMap featureMap) {
    return new PResult(PapillonCoreJavaJNI.DrawFeatureMap__SWIG_2(PImage.getCPtr(image), image, PFeatureMap.getCPtr(featureMap), featureMap), true);
  }

  public static PResult CropDetection(PDetection detection, PImage croppedImage) {
    return new PResult(PapillonCoreJavaJNI.CropDetection(PDetection.getCPtr(detection), detection, PImage.getCPtr(croppedImage), croppedImage), true);
  }

}
